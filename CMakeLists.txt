cmake_minimum_required (VERSION 2.6)
project (IO_Framework)

if(NOT CMAKE_VERSION VERSION_LESS 3.1)
    set(CMAKE_CXX_STANDARD 14)
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++14")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -pthread -g -Wl,--no-as-needed -ldl -fPIC")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -ftls-model=global-dynamic -fPIC ")
#add_compile_options("-fsanitize=address" )
#add_compile_options("-fno-omit-frame-pointer")
#add_compile_options("-fno-common")
#link_libraries("-fsanitize=address")
include_directories(/cvmfs/belle.cern.ch/sl6/externals/v01-05-01/Linux_x86_64/common/lib/gcc/x86_64-pc-linux-gnu/6.3.0/include)

option(DEFAULT_SERVER "Default server IP and port" ON)
if(DEFAULT_SERVER)
    set(TEST_SERVER_IP  "127.0.0.1")
    set(TEST_SERVER_PORT "6024")
    add_definitions(-DTEST_SERVER_IP="${TEST_SERVER_IP}")
    add_definitions(-DTEST_SERVER_PORT=${TEST_SERVER_PORT})
endif()

option(INPUT_DIR "Default input directory" ON)
if(INPUT_DIR)
    set(INPUT_DIR_PATH "${CMAKE_BINARY_DIR}/inputs")
    add_definitions(-DINPUTS_DIR="${CMAKE_BINARY_DIR}/inputs")
else()
    set(INPUT_DIR_PATH ".")
endif()

set(SERVER_PATH "${CMAKE_BINARY_DIR}/src/server/server")
set(LIB_PATH "${CMAKE_BINARY_DIR}/src/client/libclient.so")
set(CLOSE_SERVER_PATH "${CMAKE_BINARY_DIR}/test/CloseServer")
set(PING_SERVER_PATH "${CMAKE_BINARY_DIR}/test/PingServer")

#add_definitions(-DMSG_ERROR)

option(RSOCKET "Use rsockets instead of TCP" OFF)
if(RSOCKET)
    find_library(RDMACM_LIB rdmacm )
    find_path(RSOCKET_INCLUDE rdma/rsocket.h)
    if(RSOCKET_INCLUDE)
        include_directories(${RSOCKET_INCLUDE})
        message("Using RDMA RSockets ${RSOCKET_INCLUDE}")
        add_definitions(-DUSE_RSOCKETS)
    else()
        set(RSOCKET_INCLUDE "")
        set(RDMACM_LIB "")
    endif()
else()
    set(RSOCKET_INCLUDE "")
    set(RDMACM_LIB "")
endif()

find_library(RT_LIB rt)

include_directories(inc)
add_subdirectory(src)
add_subdirectory(test)
add_subdirectory(inputs)
